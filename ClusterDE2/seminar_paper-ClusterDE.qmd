---
title: "ClusterDE Seminar Paper"
author: Carson Zhang
abstract: |
  In typical differential expression analysis, a clustering algorithm is applied 
  to scRNA-seq data, and then a differential expression test is conducted 
  in order to identify genes that are differentially expressed between the clusters.
  However, this procedure constitutes "double dipping", as it first clusters
  the data to identify cell types, and then uses those same clusters to identify 
  cell-type marker genes. This leads to an inflated FDR for DE genes. 
  Song et al. (2023) propose ClusterDE, a post-clustering DE method that 
  controls the FDR of DE genes. ClusterDE generates a synthetic null dataset
  that preserves the structure of the real data, 
  computes differences between this null dataset and the real data, then performs 
  FDR control on the results. Simulations and real data analysis demonstrate
  that ClusterDE controls the FDR and identifies cell-type marker genes as
  top DE genes, successfully distinguishing them from housekeeping genes.
format:
  html:
    toc: true
    html-math-method: katex
    embed-resources: true
  # typst:
  #   toc: true
  #   section-numbering: 1.1.a
  #   columns: 1
  #   mainfont: "Arial"
  #   fontsize: 11pt
  #   keep-typ: true
---

## Introduction

### Background

#### Biology

TODO: give the basic biology background necessary to understand the paper.

##### RNA

RNA carries the genetic information specific in DNA. There are two main types of RNA.

**Non-coding RNA** performs some biological function.

**Messenger RNA** forms a template for protein production (it codes for a protein which performs some biological function).

TODO: explain the jump from RNA to the UMI count matrix.

TODO: define UMI.

#### scRNA-seq

TODO: give an explanation of scRNA-seq data collection and analysis.

#### Double-dipping

TODO: explain the double-dipping problem in differential expression analysis.

Biologists are interested in determining the cell types of the cells in a sample. (TODO: give a concrete example.)
A natural way to do this might look like this:
- Cluster the sample. We hope that each cluster represents a distinct cell type.
- For each gene, 

## Method

In words, the ClusterDE method can be broken up into four steps:

1. Generate a synthetic null dataset that mimics the structure 
(in particular, the gene-gene correlation structure) of the original data.

2. Separately partition the synthetic null data and the target data (real data) into two clusters.

3. Separately for the null and target data, perform hypothesis tests for differentially expressed genes between the two clusters. 
For each gene, compute some sort of difference between the scores on the two datasets.

4. Output a subset of the significant results from step 3 as potential cell-type marker genes.

![An graphical illustration of ClusterDE.](ClusterDE_illustration.png)

It is important to note that ClusterDE "does not provide an automatic decision about whether two clusters should be merged". Its outputs are potential DE genes, and therefore it does not directly measure the quality of a given clustering. These potential cell-type marker genes enable researchers to gain biological insights into the clusters, and they empower researchers to further explore the functional and molecular characteristics of the clusters.

### Synthetic null generation

The synthetic null generation consists of three steps, as described in the following figure.

![Null generation steps.](ClusterDE_supp_null_generation.png)

1. Model the null distribution in terms of the Gaussian copula.

TODO: state Sklar's Theorem.

Now, our goal is to estimate the parameters ${\mu_j, \sigma_j}_{j = 1}^m$ and $\mathbf{R}$. 

2. Fit the null model to the real data.

Recall that the power of the copula is that it allows us to consider the marginal distributions separately from the covariance structure. Therefore, we can proceed as follows.

For each gene $j$, estimate ${\mu_j, \sigma_j}$ using maximum likelihood. These are the marginal distributions.

For the entire dataset, use the Gaussian copula to model the dependence structure:
- Transform the raw data (counts) to the CDF values of the counts.
- Transform the CDF values to standard Gaussian random variables.
- Fit a $m$-dimensional multivariate Gaussian distribution to this data to compute $\mathbf{\hat{R}}$.
- Sample from this multivariate Gaussian distribution.
- Transform the multivariate Gaussian sample to its CDF values.

3. Sample from the fitted null model.
- Generate a sample of size $n$ from $N_m(\mathbf{0}, \mathbf{\hat{R}})$.
- Convert them to negative binomial count vectors.

### 2. Clustering

ClusterDE allows any clustering algorithm. Note that it only handles the case of two clusters, so if you started out with more clusters, you should identify a particular pair of interest. In the **Practical guidelines for ClusterDE usage** subsection, steps 1 and 2 describe how an analyst should proceed.

1. Given $\geq 2$ clusters, identify 2 clusters of interest. Generally, this will be a pair for which you suspect the clustering is spurious (i.e. you think the two clusters actually come from the same cell type, so they are strong candidates to be merged into a single cluster).

2. Filter the data so that you only consider the subset of cells that come from those two clusters.

TODO: describe the Seurat clustering pipeline.

#### UMAP

UMAP is common.

TODO: summarize UMAP.

#### Louvain

The example analyses in the presentation use the default Seurat clustering procedure, which uses the Louvain algorithm.

TODO: summarize the Louvain algorithm.

### 3. DE analysis (testing)

ClusterDE allows any DE test.

TODO: choose and summarize common DE tests.

Let $P_1, ..., P_m$ be the p-values computed by the $m$ DE tests on the target data. 
Define the target DE score $S_j := -\log_{10}P_j$. Likewise for the synthetic null data.

TODO: motivate the formula for the DE score. It is essentially the information content of the p-value.

The final outputs of step 3: $m$ target DE scores $S_1, ..., S_m$; $m$ null DE scores $\tilde{S}_1, ..., \tilde{S}_m$.

### 4. FDR control

Given the target and null DE scores, compute a contrast score for gene $j$ as $C_j := S_j - \tilde{S}_j$.

In reality, we will have some more positive contrast scores than negative ones.

In the case that there truly are two cell types, then we should definitely expect some true DE genes, and should therefore expect more positive contrast scores than negative ones. 

Recall the contrast score formula: $C_j := S_j - \tilde{S}_j$. When this is positive, then the DE test on the target data was more surprising under the null, which means it outputted a smaller p-value. This *should* be the case if the null is false. This is why the authors say that, ideally, slightly less than 50% of all genes' contrast scores should be negative. We want to satisfy the symmetry requirement of Clipper.

Motivation for the cutoff: under the null hypothesis, we have a symmetric distribution of contrast scores. Assume the negative tail is differences due to random noise. Under the null hypothesis, the right tail would be the same size. 

## Results

### Simulation

### Real data example

## Appendix
